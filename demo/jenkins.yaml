jenkins:
  systemMessage: "Jenkins configured automatically by Jenkins Configuration as Code Plugin
                  for the demo of Remoting Kafka Plugin
                  https://github.com/jenkinsci/remoting-kafka-plugin.\n\n"
  numExecutors: 1
  scmCheckoutRetryCount: 2
  mode: NORMAL
  securityRealm:
    local:
      users:
        - id: "admin"
          password: "admin"

  nodes:
    - permanent:
        name: "test"
        remoteFS: "/home/jenkins"
        launcher:
          kafka:
            enableSSL: "true"
            kafkaUsername: "admin"
            sslKeystoreLocation: "/kafka.keystore.jks"
            sslTruststoreLocation: "/kafka.truststore.jks"

credentials:
  system:
    domainCredentials:
        - credentials:
          - usernamePassword:
              scope:    SYSTEM
              id:       kafka_password
              username: admin
              password: admin-secret
          - usernamePassword:
              scope:    SYSTEM
              id:       truststore_password
              username: /kafka.truststore.jks
              password: kafkadocker
          - usernamePassword:
              scope:    SYSTEM
              id:       keystore_password
              username: /kafka.keystore.jks
              password: kafkadocker
          - usernamePassword:
              scope:    SYSTEM
              id:       sslkey_password
              username: sslkey
              password: kafkadocker

unclassified:
  location:
    url: http://localhost:8080/
  
  kafka:
    brokerURL: 172.17.0.1:9092
    zookeeperURL: 172.17.0.1:2181
    enableSSL: true
    kafkaCredentialsId: kafka_password
    sslTruststoreCredentialsId: truststore_password
    sslKeystoreCredentialsId: keystore_password
    sslKeyCredentialsId: sslkey_password

jobs:
  - >
    pipelineJob('demo_hello') {
        definition {
            cps {
                sandbox()
                script("""
                    node('test') {
                      sh "echo Hello World"
                    }
                """.stripIndent())
            }
        }
    }

  - >
    pipelineJob('demo_ping') {
        definition {
            cps {
                sandbox()
                script("""
                    node('test') {
                      sh "ping -c 20 google.com"
                    }
                """.stripIndent())
            }
        }
    }
