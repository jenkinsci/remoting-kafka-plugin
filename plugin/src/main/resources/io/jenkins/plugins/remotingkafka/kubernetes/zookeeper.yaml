apiVersion: v1
kind: Service
metadata:
  name: zookeeper-svc
spec:
  ports:
    - port: 2181
      name: client
  selector:
    app: zookeeper
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-svc-hs # Headless service for Zookeeper servers to communicate with each other
spec:
  ports:
    - port: 2888
      name: peer
    - port: 3888
      name: leader-election
  clusterIP: None
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
spec:
  selector:
    matchLabels:
      app: zookeeper
  serviceName: zookeeper-svc-hs
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: zookeeper:3.5.5
          env:
            - name: ZOO_DATA_DIR
              value: "/zookeeper/data"
            - name: ZOO_DATA_LOG_DIR
              value: "/zookeeper/datalog"
            - name: ZOO_LOG_DIR
              value: "/zookeeper/logs"
          command:
            - /bin/sh
            - -exc
            - |
              mkdir -p $ZOO_DATA_DIR $ZOO_DATA_LOG_DIR $ZOO_LOG_DIR
              /docker-entrypoint.sh
              echo "4lw.commands.whitelist=*" >> $ZOO_CONF_DIR/zoo.cfg
              exec zkServer.sh start-foreground
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - '[ "imok" = "$(echo ruok | nc -w 1 127.0.0.1 2181)" ]'
          volumeMounts:
            - name: zookeeper-data
              mountPath: /zookeeper
  volumeClaimTemplates:
    - metadata:
        name: zookeeper-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: standard
        resources:
          requests:
            storage: 1Gi